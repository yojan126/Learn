责任链模式的定义
　　从生活中的例子可以发现，某个请求可能需要几个人的审批，即使技术经理审批完了，还需要上一级的审批。这样的例子，还有公司中的请假，
少于3天的，直属Leader就可以批准，3天到7天之内就需要项目经理批准，多余7天的就需要技术总监的批准了。介绍了这么多生活中责任链模式的例子的，
下面具体给出面向对象中责任链模式的定义。

　　责任链模式指的是——某个请求需要多个对象进行处理，从而避免请求的发送者和接收之间的耦合关系。将这些对象连成一条链子，
并沿着这条链子传递该请求，直到有对象处理它为止。

主要涉及两个角色：

抽象处理者角色（Handler）：定义出一个处理请求的接口。这个接口通常由接口或抽象类来实现。
具体处理者角色（ConcreteHandler）：具体处理者接受到请求后，可以选择将该请求处理掉，或者将请求传给下一个处理者。
因此，每个具体处理者需要保存下一个处理者的引用，以便把请求传递下去。

责任链模式的适用场景 
　　在以下场景中可以考虑使用责任链模式：

一个系统的审批需要多个对象才能完成处理的情况下，例如请假系统等。
代码中存在多个if-else语句的情况下，此时可以考虑使用责任链模式来对代码进行重构。

责任链模式的优缺点
　　责任链模式的优点不言而喻，主要有以下点：

降低了请求的发送者和接收者之间的耦合。
把多个条件判定分散到各个处理类中，使得代码更加清晰，责任更加明确。
　　责任链模式也具有一定的缺点，如：

在找到正确的处理对象之前，所有的条件判定都要执行一遍，当责任链过长时，可能会引起性能的问题
可能导致某个请求不被处理。

总结
　　责任链降低了请求端和接收端之间的耦合，使多个对象都有机会处理某个请求。如考试中作弊传纸条，泡妞传情书一般。